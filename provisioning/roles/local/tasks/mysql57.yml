- name: Install packages for MySQL
  action: apt pkg={{ item }} state=present
  with_items:
    - python-setuptools
    - python-dev
    - build-essential
    - python-pip
    - software-properties-common
    - zip
    - unzip

- name: Remove default apache package
  action: apt pkg=apache2 state=absent

- name: Install pip
  shell: easy_install pip

- name: Updating the cache
  apt: update_cache=yes

- name: Add MySQL Repository
  copy:
    src: mysql.list
    dest: /etc/apt/sources.list.d/mysql.list
    owner: root
    group: root
  when: app_env == "local"
  become: True

- name: Set root Password
  debconf:
    name: mysql-community-server
    question: 'mysql-community-server/root-pass'
    value: '{{ mysql_root_password }}'
    vtype: password
  when: app_env == "local"
  become: True

- name: Set root Password Again
  debconf:
    name: mysql-community-server
    question: 'mysql-community-server/re-root-pass'
    value: '{{ mysql_root_password }}'
    vtype: password
  when: app_env == "local"
  become: True

- name: Install MySQL 5.7
  apt:
    pkg: mysql-server
    state: latest
    update_cache: true
    autoremove: yes
    force: yes
  when: app_env == "local"
  become: True

- name: Install packages for MySQL
  action: apt pkg={{ item }} state=present
  with_items:
    - mysql-client
    - python-mysqldb
- action: apt pkg=ansible state=present
  when: app_env == "local"

- name: Install MySQL python package via pip
  shell: pip install MySQL-python

- name: Copy local .my.cnf.j2 file with root's password credentials
  template: src=mysql/my.cnf.j2 dest=/root/.my.cnf owner=root mode=0600
  when: app_env == "local"

- name: Copy local .my.cnf.j2 file with vagrant's password credentials
  template: src=mysql/my.cnf.j2 dest=/home/{{ ansible_user }}/.my.cnf owner={{ ansible_user }} group={{ ansible_user }} mode=0600
  when: app_env == "local"

- name: Update mysql password for APP mysql user accounts
  mysql_user:
    host={{ item }}
    login_user={{ mysql_root_user }}
    login_password={{ mysql_root_password }}
    name={{ mysql_user }}
    password={{ mysql_password }}
    priv=*.*:ALL,GRANT
  with_items:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost
  ignore_errors: true
  when: app_env == "local"

- name: Ensure databases
  mysql_db:
    name={{ item }}
    state=present
    login_user={{ mysql_root_user }}
    login_password={{ mysql_root_password }}
  when: app_env == "local"
  ignore_errors: true
  with_items:
    - "{{ mysql_db }}"

- name: Update mysql password for APP mysql all hosts
  mysql_user:
    host={{ item }}
    login_user={{ mysql_root_user }}
    login_password={{ mysql_root_password }}
    name={{ mysql_user }}
    password={{ mysql_password }}
    priv=*.*:ALL,GRANT
  with_items:
    - "%"
  ignore_errors: true
  when: app_env == "local"

- name: Global mysql configuration for dev
  template: src=mysql/my.cnf.j2 dest=/etc/mysql/my.cnf owner={{ansible_ssh_user}} mode=0600
  when: app_env == "local"

- name: Load timezone tables on dev
  shell: mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u{{ mysql_user }} -p{{ mysql_password }} mysql
  when: app_env == 'dev'